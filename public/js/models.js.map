{"version":3,"sources":["userModel.js","apiModel.js"],"names":[],"mappingsfile":"models.js","sourcesContent":["synco.factory('userModel', ['$http', '$cookies', function($http, $cookies) {\n\tvar userModel = {};\n\n\t//Log in user\n\tuserModel.doLogin = function(loginData) \n\t\t{\n\t\t\treturn $http({\t\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\turl: 'www.synco.xyz/auth',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: {\n\t\t\t\t\temail: loginData.email,\n\t\t\t\t\tpassword: loginData.password\n\t\t\t\t}\n\t\t\t}).success(function(response) {\n\t\t\t\tconsole.log(response);\n\t\t\t\t\n\t\t\t\tlocalStorage.auth = response;\n\t\t\t\tlocalStorage.userName = response.name;\n\t\t\t\tlocalStorage.id = response.id;\n\t\t\t\tconsole.log($cookies.get('userName'));\n\t\t\t\t\n\t\t\t}).error(function(data,status,headers) {\n\t\t\t\tconsole.log(data,status,headers);\n\t\t\t\talert(data);\n\t\t\t});\n\t\t};\n\n\t//Send JSON request to register new user\n\tuserModel.register = function(registerData)\n\t{\n\t\treturn $http({\t\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\turl: baseUrl + 'authentication/register',\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tdata: {\n\t\t\t\t\temail: registerData.email,\n\t\t\t\t\tpassword: registerData.password,\n\t\t\t\t\tname: registerData.name,\n\t\t\t\t\tpassword_confirmation: registerData.password_confirmation\n\t\t\t\t}\n\t\t\t}).success(function(response) {\n\t\t\t\tconsole.log(response);\n\t\t\t\talert(\"You were registered. You can now log in.\");\n\t\t\t}).error(function(data,status,headers) {\n\t\t\t\tconsole.log(\"Error registering.\");\n\t\t\t\talert(\"Error with registering. Please try again.\");\n\t\t\t});\n\n\t};\n\n\t//Check if user is a logged in member\n\tuserModel.getAuthStatus = function() \n\t{\n\t\tvar status = localStorage.auth;\n\t\tif (status) \n\t\t{\n\t\t\treturn true;\n\t\t} else \n\t\t{\n\t\t\treturn false;\n\t\t}\n\t};\n\n\t//Get logged in user's username\n\tuserModel.getUserName = function() \n\t{\n\t\tvar name = localStorage.userName;\n\t\tif (name) \n\t\t{\n\t\t\treturn name;\n\t\t}\n\t\telse \n\t\t{\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t//Get ID# of logged in user\n\tuserModel.getId = function() \n\t{\n\t\tvar id = localStorage.id;\n\t\tif (id) \n\t\t{\n\t\t\treturn id;\n\t\t}\n\t\telse \n\t\t{\n\t\t\treturn null;\n\t\t}\n\t}\n\n\t//Check if post belongs to user\n\tuserModel.isUsersPost = function(name) \n\t{\n\t\tif (name == localStorage.userName)\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\telse if (localStorage.userName == \"god\")\n\t\t{\n\t\t\treturn true;\n\t\t}\n\n\t\telse\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t}\n\n\t//Logout user -> clear local storage\n\tuserModel.doUserLogout = function() \n\t{\n\t\tlocalStorage.clear();\n\t}\n\n\treturn userModel;\n}])","synco.factory('apiModel', ['$http', '$cookies', function($http, $cookies) {\n\tvar apiModel = {};\n\n\t\n\tapiModel.getPostData = function()\n\t{\n\t\t$http.get(\"http://www.synco.xyz/api/v1/posts\")\n\t\t\t.success(function(response){\n\t\t\t\treturn response;\n\t\t\t});\n\t}\n\n\treturn apiModel;\n}])"],"sourceRoot":"/source/"}